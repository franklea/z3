# Generate test cases (pairs of _.smt2 input and _.out output files) for
# predabst.
#
# Note that in several of the test cases, especially those that involve template
# or predicate refinement, the expected model is just one of many valid models
# for the problem.  Changes to the predabst implementation may well result in a
# different model being found, leading to a spurious test failure.

from inpval_tests import inpval_tests
from basic_tests import basic_tests
from template_tests import template_tests
from argnames_tests import argnames_tests
from wf_tests import wf_tests
#from random_tests import random_tests

all_tests = [
    ('inpval', inpval_tests),
    ('basic', basic_tests),
    ('templ', template_tests),
    ('wf', wf_tests),
    ('argnames', argnames_tests),
    #('random', random_tests),
]

def write_test_smt2(testname, code, postsat_code):
    filename = testname + ".smt2"
    with open(filename, "w") as f:
        f.write("; This file was generated by make_tests.py.  DO NOT EDIT!\n")
        f.write("(set-logic HORN)\n")
        f.write("(set-option :diagnostic-output-channel \"stderr\")\n")
#        f.write("(set-option :produce-proofs true)\n") # XXX Proofs are not currently supported.
        f.write(code + "\n\n")
        f.write("(check-sat)\n")
        f.write(postsat_code + "\n")
#        f.write("(get-info :all-statistics)\n")

def write_sat_test_smt2(testname, code, validate_model):
    write_test_smt2(testname, code, "(get-model)" if validate_model else "")

def write_unsat_test_smt2(testname, code, validate_proof):
    write_test_smt2(testname, code, "(get-proof)" if validate_proof else "")

def write_unknown_test_smt2(testname, code):
    write_test_smt2(testname, code, "(get-info :reason-unknown)")

def write_test_out(testname, result, postsat_code):
    filename = testname + ".out"
    with open(filename, "w") as f:
        f.write(result + "\n")
        f.write(postsat_code + "\n")

def write_sat_test_out(testname, model):
    write_test_out(testname, "sat", "(model " + model + "\n)" if model else "")

def write_unsat_test_out(testname, proof):
    write_test_out(testname, "unsat", "(proof " + proof + "\n)" "" if proof else "")

def write_unknown_test_out(testname, errmsg):
    write_test_out(testname, "unknown", "(:reason-unknown " + errmsg + ")")

for prefix, (sat_tests, unsat_tests, unknown_tests) in all_tests:
    for test in sat_tests:
        (name, code, model) = test
        testname = prefix + "-sat-" + name
        write_sat_test_smt2(testname, code, model is not None)
        write_sat_test_out(testname, model)

    for test in unsat_tests:
        (name, code) = test
        proof = None # XXX Proofs are not currently supported.
        testname = prefix + "-unsat-" + name
        write_unsat_test_smt2(testname, code, proof is not None)
        write_unsat_test_out(testname, proof)

    for test in unknown_tests:
        (name, code, errmsg) = test
        testname = prefix + "-unknown-" + name
        write_unknown_test_smt2(testname, code)
        write_unknown_test_out(testname, errmsg)
